{"version":3,"file":"static/js/254.0b4fc282.chunk.js","mappings":"sOAwKA,UA7Je,WACb,IAAIA,GAAWC,EAAAA,EAAAA,MAETC,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,UAAWF,EAAAA,KAAaG,SAAS,2BACjCC,SAAUJ,EAAAA,KAAaG,SAAS,0BAChCE,MAAOL,EAAAA,KAAaG,SAAS,sBAAsBE,QACnDC,SAAUN,EAAAA,KACPG,SAAS,yBACTI,IAAI,EAAG,8BACPC,IAAI,GAAI,+BACXC,sBAAuBT,EAAAA,KACpBG,SAAS,iCACTI,IAAI,EAAG,8BACPC,IAAI,GAAI,+BACRE,MACC,CAACV,EAAAA,GAAQ,YAAa,MACtB,8CAEJW,KAAMX,EAAAA,KAAaG,SAAS,4BAGxBS,EAAc,CAAEC,UAAUC,EAAAA,EAAAA,GAAYf,IAC5C,GAA8CgB,EAAAA,EAAAA,IAAQH,GAA9CI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACVC,EADR,EAAgCC,UACxBD,OAcR,OACE,iBAAKE,UAAU,wBAAf,WACE,eAAIA,UAAU,yBAAd,qBACA,kBAAMC,SAAUJ,GAfpB,SAAkBK,GAChBC,IAAAA,KAAA,UAAcC,EAAAA,GAAd,mBAAgDF,GAAMG,MAAK,SAACC,GAClC,MAApBA,EAASC,SACXC,QAAQC,IAAIH,EAASI,KAAKA,KAAKzB,OAC/B0B,EAAAA,GAAAA,QAAc,sBAAuB,CACnCC,UAAW,MAEbnC,EAAS,GAAD,OAAIoC,EAAAA,GAAAA,aAAJ,YAAgCP,EAASI,KAAKA,KAAKzB,QAE9D,GACF,IAKG,WACE,iBAAKe,UAAU,kBAAf,WACE,2CACA,0BACEc,KAAK,OACLC,KAAK,YACLf,UAAS,4BACPF,EAAOhB,UAAY,aAAe,KAEhCc,EAAS,eAEdE,EAAOhB,WACN,mBAAOkB,UAAU,mBAAjB,UACG,IACAF,EAAOhB,UAAUkC,WAGpB,OAIJ,iBAAKhB,UAAU,kBAAf,WACE,0CACA,0BACEc,KAAK,OACLC,KAAK,WACLf,UAAS,4BACPF,EAAOd,SAAW,aAAe,KAE/BY,EAAS,cAEdE,EAAOd,UACN,mBAAOgB,UAAU,mBAAjB,UACG,IACAF,EAAOd,SAASgC,WAGnB,OAGJ,iBAAKhB,UAAU,kBAAf,WACE,sCACA,0BACEc,KAAK,QACLC,KAAK,QACLf,UAAS,4BAAuBF,EAAOb,MAAQ,aAAe,KAC1DW,EAAS,WAEdE,EAAOb,OACN,mBAAOe,UAAU,mBAAjB,cAAsCF,EAAOb,MAAM+B,WAEnD,OAGJ,iBAAKhB,UAAU,kBAAf,WACE,yCACA,0BACEc,KAAK,WACLC,KAAK,WACLf,UAAS,4BACPF,EAAOZ,SAAW,aAAe,KAE/BU,EAAS,cAEdE,EAAOZ,UACN,mBAAOc,UAAU,mBAAjB,UACG,IACAF,EAAOZ,SAAS8B,WAGnB,OAGJ,iBAAKhB,UAAU,kBAAf,WACE,iDACA,0BACEc,KAAK,WACLC,KAAK,wBACLf,UAAS,4BACPF,EAAOT,sBAAwB,aAAe,KAE5CO,EAAS,2BAEdE,EAAOT,uBACN,kBAAOW,UAAU,mBAAjB,SACGF,EAAOT,sBAAsB2B,UAGhC,OAGJ,iBAAKhB,UAAU,kBAAf,WACE,0CACA,oCACEe,KAAK,OACLf,UAAS,4BAAuBF,EAAOP,KAAO,aAAe,KACzDK,EAAS,SAHf,eAKE,mBAAQqB,MAAM,GAAd,kCACA,mBAAQA,MAAM,SAAd,qBACA,mBAAQA,MAAM,QAAd,uBAEDnB,EAAOP,MACN,mBAAOS,UAAU,mBAAjB,cAAsCF,EAAOP,KAAKyB,WAElD,OAGJ,gBAAKhB,UAAU,SAAf,UACE,kBAAOc,KAAK,SAASG,MAAM,WAAWjB,UAAU,yBAKzD,C","sources":["modules/auth/Signup.jsx"],"sourcesContent":["import \"./Registration.scss\";\r\nimport axios from \"axios\";\r\nimport { SERVER_BASE_URL } from \"../../common/constants\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ROUTE_NAMES } from \"../../common/constants\";\r\n\r\nconst Signup = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const yupValidation = Yup.object().shape({\r\n    firstname: Yup.string().required(\"First Name is mendatory\"),\r\n    lastname: Yup.string().required(\"Last Name is mendatory\"),\r\n    email: Yup.string().required(\"Email is mendatory\").email(),\r\n    password: Yup.string()\r\n      .required(\"Password is mendatory\")\r\n      .min(8, \"Enter minimum 8 characters\")\r\n      .max(15, \"Enter maximum 15 characters\"),\r\n    password_confirmation: Yup.string()\r\n      .required(\"Confirm Password is mendatory\")\r\n      .min(8, \"Enter minimum 8 characters\")\r\n      .max(15, \"Enter maximum 15 characters\")\r\n      .oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Confirm Passwords must match with Password\"\r\n      ),\r\n    role: Yup.string().required(\"Role Type is mendatory\"),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(yupValidation) };\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  function onSubmit(body) {\r\n    axios.post(`${SERVER_BASE_URL}api/auth/signup`, body).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(response.data.data.email);\r\n        toast.success(\"Signup Successfull!\", {\r\n          autoClose: 2000,\r\n        });\r\n        navigate(`${ROUTE_NAMES.VERIFY_EMAIL}/${response.data.data.email}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container reg-contain\">\r\n      <h2 className=\"font-w-700 text-center\">Signup</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group mb-4\">\r\n          <label>First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            className={`form-control mt-2 ${\r\n              errors.firstname ? \"is-invalid\" : \"\"\r\n            }`}\r\n            {...register(\"firstname\")}\r\n          />\r\n          {errors.firstname ? (\r\n            <label className=\"text-danger mt-1\">\r\n              {\" \"}\r\n              {errors.firstname.message}\r\n            </label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group mb-4\">\r\n          <label>Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            className={`form-control mt-2 ${\r\n              errors.lastname ? \"is-invalid\" : \"\"\r\n            }`}\r\n            {...register(\"lastname\")}\r\n          />\r\n          {errors.lastname ? (\r\n            <label className=\"text-danger mt-1\">\r\n              {\" \"}\r\n              {errors.lastname.message}\r\n            </label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className={`form-control mt-2 ${errors.email ? \"is-invalid\" : \"\"}`}\r\n            {...register(\"email\")}\r\n          />\r\n          {errors.email ? (\r\n            <label className=\"text-danger mt-1\"> {errors.email.message}</label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className={`form-control mt-2 ${\r\n              errors.password ? \"is-invalid\" : \"\"\r\n            }`}\r\n            {...register(\"password\")}\r\n          />\r\n          {errors.password ? (\r\n            <label className=\"text-danger mt-1\">\r\n              {\" \"}\r\n              {errors.password.message}\r\n            </label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            className={`form-control mt-2 ${\r\n              errors.password_confirmation ? \"is-invalid\" : \"\"\r\n            }`}\r\n            {...register(\"password_confirmation\")}\r\n          />\r\n          {errors.password_confirmation ? (\r\n            <label className=\"text-danger mt-1\">\r\n              {errors.password_confirmation.message}\r\n            </label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Role Type</label>\r\n          <select\r\n            name=\"role\"\r\n            className={`form-control mt-2 ${errors.role ? \"is-invalid\" : \"\"}`}\r\n            {...register(\"role\")}\r\n          >\r\n            <option value=\"\">Choose Role Type...</option>\r\n            <option value=\"Seller\">Seller</option>\r\n            <option value=\"Buyer\">Buyer</option>\r\n          </select>\r\n          {errors.role ? (\r\n            <label className=\"text-danger mt-1\"> {errors.role.message}</label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"d-grid\">\r\n          <input type=\"submit\" value=\"REGISTER\" className=\"btn theme-btn\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["navigate","useNavigate","yupValidation","Yup","shape","firstname","required","lastname","email","password","min","max","password_confirmation","oneOf","role","formOptions","resolver","yupResolver","useForm","register","handleSubmit","errors","formState","className","onSubmit","body","axios","SERVER_BASE_URL","then","response","status","console","log","data","toast","autoClose","ROUTE_NAMES","type","name","message","value"],"sourceRoot":""}