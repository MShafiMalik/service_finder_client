{"version":3,"file":"static/js/505.8a6c7468.chunk.js","mappings":"oQAyHA,UAxGc,WACZ,IAAIA,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,MAAOF,EAAAA,KAAaG,SAAS,sBAAsBD,QACnDE,SAAUJ,EAAAA,KACPG,SAAS,yBACTE,IAAI,EAAG,8BACPC,IAAI,GAAI,iCAGPC,EAAc,CAAEC,UAAUC,EAAAA,EAAAA,GAAYV,IAC5C,GAA8CW,EAAAA,EAAAA,IAAQH,GAA9CI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACVC,EADR,EAAgCC,UACxBD,OAoCR,OACE,iBAAKE,UAAU,wBAAf,WACE,eAAIA,UAAU,yBAAd,oBACA,kBAAMC,SAAUJ,GArCpB,SAAkBK,GAChBnB,GAAW,GACXJ,GAASwB,EAAAA,EAAAA,OAET,KACEC,EAAAA,EAAAA,IAAMF,GAAMG,MAAK,SAACC,GAChB,GAA6B,QAAjB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUC,YAAqB,CACjC,IAAMC,EAAOF,EAASE,KAAKA,MAC3BC,EAAAA,EAAAA,IAAaD,GAAM,WACjB7B,GAAS+B,EAAAA,EAAAA,IAAa,CAAEF,KAAAA,KACxBzB,GAAW,GACX4B,EAAAA,GAAAA,QAAc,qBAAsB,CAClCC,UAAW,MAEbnC,EAASoC,EAAAA,GAAAA,KACV,GACF,KAAM,CACL,IAAMC,EAAK,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAUC,WACxB5B,GAASoC,EAAAA,EAAAA,IAAU,CAAED,MAAAA,KACrB/B,GAAW,GACX4B,EAAAA,GAAAA,MAAY,yBAA0B,CACpCC,UAAW,KAEd,CACF,GAOF,CANC,MAAOE,GACPE,QAAQC,IAAI,yBAA0BH,GACtC/B,GAAW,GACX4B,EAAAA,GAAAA,MAAY,yBAA0B,CACpCC,UAAW,KAEd,CACF,IAKG,WACE,iBAAKZ,UAAU,kBAAf,WACE,sCACA,0BACEkB,KAAK,QACLC,KAAK,QACLnB,UAAS,4BAAuBF,EAAOX,MAAQ,aAAe,KAC1DS,EAAS,WAEdE,EAAOX,OACN,mBAAOa,UAAU,mBAAjB,cAAsCF,EAAOX,MAAMiC,WAEnD,OAGJ,iBAAKpB,UAAU,kBAAf,WACE,yCACA,0BACEkB,KAAK,WACLC,KAAK,WACLnB,UAAS,4BACPF,EAAOT,SAAW,aAAe,KAE/BO,EAAS,cAEdE,EAAOT,UACN,mBAAOW,UAAU,mBAAjB,UACG,IACAF,EAAOT,SAAS+B,WAGnB,OAGJ,gBAAKpB,UAAU,SAAf,UACe,IAAZlB,GACC,mBAAQoC,KAAK,SAASlB,UAAU,gBAAgBqB,SAAS,WAAzD,yBAIA,mBAAQH,KAAK,SAASlB,UAAU,gBAAhC,0BAQX,C","sources":["modules/auth/Login.jsx"],"sourcesContent":["import \"./Registration.scss\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  loginFail,\r\n  loginPending,\r\n  loginSuccess,\r\n} from \"../../reducers/authSlice\";\r\nimport { authenticate, login } from \"../../helpers/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ROUTE_NAMES } from \"../../common/constants\";\r\n\r\nconst Login = () => {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const yupValidation = Yup.object().shape({\r\n    email: Yup.string().required(\"Email is mendatory\").email(),\r\n    password: Yup.string()\r\n      .required(\"Password is mendatory\")\r\n      .min(8, \"Enter minimum 8 characters\")\r\n      .max(15, \"Enter maximum 15 characters\"),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(yupValidation) };\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  function onSubmit(body) {\r\n    setLoading(true);\r\n    dispatch(loginPending());\r\n\r\n    try {\r\n      login(body).then((response) => {\r\n        if (response?.statusText === \"OK\") {\r\n          const data = response.data.data;\r\n          authenticate(data, () => {\r\n            dispatch(loginSuccess({ data }));\r\n            setLoading(false);\r\n            toast.success(\"Login Successfull!\", {\r\n              autoClose: 2000,\r\n            });\r\n            navigate(ROUTE_NAMES.HOME);\r\n          });\r\n        } else {\r\n          const error = response?.statusText;\r\n          dispatch(loginFail({ error }));\r\n          setLoading(false);\r\n          toast.error(\"Login Not Successfull!\", {\r\n            autoClose: 2000,\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"login page catch error\", error);\r\n      setLoading(false);\r\n      toast.error(\"Login Not Successfull!\", {\r\n        autoClose: 2000,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container reg-contain\">\r\n      <h2 className=\"font-w-700 text-center\">Login</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className={`form-control mt-2 ${errors.email ? \"is-invalid\" : \"\"}`}\r\n            {...register(\"email\")}\r\n          />\r\n          {errors.email ? (\r\n            <label className=\"text-danger mt-1\"> {errors.email.message}</label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className={`form-control mt-2 ${\r\n              errors.password ? \"is-invalid\" : \"\"\r\n            }`}\r\n            {...register(\"password\")}\r\n          />\r\n          {errors.password ? (\r\n            <label className=\"text-danger mt-1\">\r\n              {\" \"}\r\n              {errors.password.message}\r\n            </label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"d-grid\">\r\n          {loading === true ? (\r\n            <button type=\"submit\" className=\"btn theme-btn\" disabled=\"disabled\">\r\n              Loading...\r\n            </button>\r\n          ) : (\r\n            <button type=\"submit\" className=\"btn theme-btn\">\r\n              LOGIN\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","useState","loading","setLoading","yupValidation","Yup","shape","email","required","password","min","max","formOptions","resolver","yupResolver","useForm","register","handleSubmit","errors","formState","className","onSubmit","body","loginPending","login","then","response","statusText","data","authenticate","loginSuccess","toast","autoClose","ROUTE_NAMES","error","loginFail","console","log","type","name","message","disabled"],"sourceRoot":""}